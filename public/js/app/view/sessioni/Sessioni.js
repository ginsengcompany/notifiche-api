/*
 * File: app/view/sessioni/Sessioni.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AdvaSoftLogin.view.sessioni.Sessioni', {
    extend: 'Ext.container.Container',
    alias: 'widget.sessionisessioni',

    requires: [
        'AdvaSoftLogin.view.sessioni.SessioniViewModel',
        'AdvaSoftLogin.view.sessioni.SessioniViewController',
        'Ext.grid.Panel',
        'Ext.grid.column.Date',
        'Ext.grid.column.Action',
        'Ext.view.Table'
    ],

    controller: 'sessionisessioni',
    viewModel: {
        type: 'sessionisessioni'
    },
    padding: '10 10 10 10',
    layout: 'fit',

    items: [
        {
            xtype: 'gridpanel',
            title: 'Lista Sessioni',
            store: 'Sessioni',
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'access_token',
                    text: 'Token',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'clientId',
                    text: 'Client Id',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'username',
                    text: 'Username',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    width: 60,
                    dataIndex: 'session_type',
                    text: 'Tipo'
                },
                {
                    xtype: 'datecolumn',
                    width: 150,
                    dataIndex: 'expires_token',
                    text: 'Scadenza',
                    format: 'd-m-Y H:i:s'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var returnValue = "Attiva";
                        //var durataSessione = 3600000; <- in millisecondi
                        var dataScadenza = new Date();
                        record.data.expires_token = new Date();
                        if(record.data.expires_token.getTime() < dataScadenza.getTime()){
                            metaData.tdCls = 'red-font';
                            returnValue = "Scaduta";
                        }
                        else{
                            metaData.tdCls = 'green-font';
                            returnValue = "Attiva";
                        }
                        return returnValue;
                    },
                    width: 80,
                    text: 'Stato'
                },
                {
                    xtype: 'actioncolumn',
                    width: 60,
                    align: 'center',
                    items: [
                        {
                            handler: 'onCancellaSessione',
                            iconCls: 'fa fa-ban'
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        activate: 'onSessioniActivate'
    }

});